<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <artifactId>spring_workspaces</artifactId>
        <groupId>spings</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>spring-mvc-basics</artifactId>
    <packaging>war</packaging>

    <name>spring-mvc-basics</name>

    <build>
        <finalName>spring-mvc-basics</finalName>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <verbose>true</verbose>
                    <!-- Specifying where the docker host is running
                    Not necessary if only run from the local machine. -->
                    <!--<dockerHost>http://127.0.0.1:2375</dockerHost>-->
                    <!--<dockerHost>unix:///var/run/docker.sock</dockerHost>-->
                    <images>
                        <image>
                            <alias>spring-mvc</alias>
                            <name>spring-mvc-basics:${project.version}</name>
                            <build>
                                <from>openjdk:8-jdk</from>
                                <contextDir>${project.basedir}/src/main/docker</contextDir>
                                <entryPoint>
                                    <exec>
                                        <arg>java</arg>
                                        <!-- This extra argument is so Tomcat can start faster due to lack of entropy -->
                                        <arg>-Djava.security.egd=file:/dev/./urandom</arg>
                                        <arg>-jar</arg>
                                        <!-- /maven/ is the default dir that the plugin copies your artifact to -->
                                        <arg>/maven/${project.artifactId}.${project.packaging}</arg>
                                    </exec>
                                </entryPoint>
                                <assembly>
                                    <!-- This copies the final artifact to the Docker image -->
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                            </build>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <ports>
                                    <port>8888:8080</port>
                                </ports>
                                <log>
                                    <prefix>TC</prefix>
                                    <date>default</date>
                                    <color>cyan</color>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <!-- Uncomment this execution phase if you wan to remove container after testing -->
                    <!--<execution>
                      <id>clean image</id>
                      <phase>post-integration-test</phase>
                      <goals>
                        <goal>stop</goal>
                      </goals>
                    </execution>-->
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
